name: 'Build on debian/ubuntu in container'

on:
  push:
    branches: ["main"]
  pull_request:
      branches: ["main"]
  workflow_call:

jobs:
  linux-container-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: ["debian:bookworm", "ubuntu:focal", "ubuntu:jammy", "ubuntu:noble"]
    container:
      image: ghcr.io/johanvdw/saga-watem-build-${{ matrix.os }}
      options: --user 1001
    steps:
    - uses: actions/checkout@v4
    - name: run cmake
      shell: bash
      run: |
        mkdir build
        cd build
        cmake ..
        make
        IFS=':' read -r os release <<< '${{ matrix.os }}'
        zip "saga_watem_$release.zip" $(find . -name *.so) -j
        make DESTDIR=libs install
    - name: run tests
      run: |
        pytest-3 -vv
    - name: Set sanitized OS name
      id: os_name
      run: echo "sanitized_os=$(echo '${{ matrix.os }}' | sed 's/:/-/')" >> "$GITHUB_OUTPUT"

    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v4
      with:
        name: Release zip files ${{ steps.os_name.outputs.sanitized_os  }}
        Path: build/*.zip
      
  linux-container-build-deb:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: ["debian:bookworm", "ubuntu:focal", "ubuntu:jammy", "ubuntu:noble"]
    container:
      image: ghcr.io/johanvdw/saga-watem-build-${{ matrix.os }}
      options: --user 1001
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-tags: true
        fetch-depth: 0
    - name: build deb packages
      shell: bash
      run: |
        IFS=':' read -r os release <<< '${{ matrix.os }}'
        dch --newversion $(git describe --tags)~$release  "autobuild $(git describe --tags)"
        debian/rules binary
        mv ../*.deb .
    - name: Set sanitized OS name
      id: os_name
      run: echo "sanitized_os=$(echo '${{ matrix.os }}' | sed 's/:/-/')" >> "$GITHUB_OUTPUT"
    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v4
      with:
        name: debian package ${{ steps.osname.outputs.sanitized_os }}
        Path: "*.deb"
